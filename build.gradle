/*
 * This file is part of npc-lib, licensed under the MIT License (MIT).
 *
 * Copyright (c) 2020-2021 Julian (juliarn), Pasqual (derklaro) and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
  id 'org.cadixdev.licenser' version '0.6.1' apply false
}

defaultTasks 'build', 'test', 'check', 'jar'

allprojects {
  version '2.0.0-SNAPSHOT'
  group 'com.github.juliarn'
}

subprojects {
  apply plugin: 'checkstyle'
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'org.cadixdev.licenser'

  repositories {
    mavenCentral()
  }

  dependencies {
    implementation group: 'org.jetbrains', name: 'annotations', version: '21.0.1'
    // test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0-M1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0-M1'
    // mocking
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.1'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.11.1'
  }

  test {
    useJUnitPlatform()
  }

  publishing {
    publications {
      maven(MavenPublication) {
        from(components.java)
      }
    }
  }

  java {
    withSourcesJar()
    withJavadocJar()

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  license {
    header = project.rootProject.file('LICENSE_HEADER')
  }

  checkstyle {
    toolVersion = '8.44'
  }

  tasks {
    withType(JavaCompile) {
      options.encoding = 'UTF-8'
    }

    withType(Javadoc) {
      options.encoding = 'UTF-8'
    }

    withType(Checkstyle).configureEach {
      maxErrors = 0
      maxWarnings = 0
      configFile = project.rootProject.file('checkstyle.xml')
    }
  }
}